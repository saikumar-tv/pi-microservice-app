name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: pipocwebapp.azurecr.io

jobs:
  backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: npm install
        working-directory: backend

      - name: Lint backend code
        run: npm run lint
        working-directory: backend
        continue-on-error: true

      - name: Scan backend for vulnerabilities
        run: npm audit --audit-level=high
        working-directory: backend
        continue-on-error: true

      - name: Generate Short Commit SHA
        run: echo "COMMIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR Login
        run: az acr login --name $AZURE_CONTAINER_REGISTRY
      - name: Build and push backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.AZURE_CONTAINER_REGISTRY }}/backend:${{env.COMMIT_SHA}}
          file: ./backend/Dockerfile
      
      - name: Scan backend Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.AZURE_CONTAINER_REGISTRY }}/backend:${{env.COMMIT_SHA}}
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
